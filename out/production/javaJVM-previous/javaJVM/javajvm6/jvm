JNI调用本地方法
注意: 本版块作为选学内容

java还有一个JNI机制 它的全称: JavaNativeInterface 即java本地接口 它允许在java虚拟机内运行的java代码与其他编程语言(如C/C++和汇编语言)
编写的程序和库进行交互(在Android开发中用的比较多) 比如我们现在想要让C语言程序帮助我们的java程序实现 a+b 的运算 首先我们需要创建一个本地方法:
                    public class Main {

                        // 本地方法使用native关键字标记 无需任何实现 交给C语言实现
                        static native int sum(int a, int b);

                        public static void main(String[] args) {

                            System.out.println(sum(1, 2));

                        }

                    }

创建好后 接着点击构建按钮 会出现一个out文件夹 也就是生成的class文件在其中 接着我们直接生成对应的C头文件:
                    // JDK版本在1.8及以下的使用这个命令
                    javah -classpath out/production/javaJVM-previous -d ./jni com.test.Main

                    // JDK版本在1.8以上的使用这个命令
                    javac -encoding utf8 -h . Main.java

生成的头文件位于jni文件夹下:
                    /* DO NOT EDIT THIS FILE - it is machine generated */
                    #include <jni.h>
                    /* Header for class com_test_Main */

                    #ifndef _Included_com_test_Main
                    #define _Included_com_test_Main
                    #ifdef __cplusplus
                    extern "C" {
                    #endif
                    /*
                     * Class:     com_test_Main
                     * Method:    sum
                     * Signature: (II)I
                     */
                    JNIEXPORT jint JNICALL Java_com_test_Main_sum
                      (JNIEnv *, jclass, jint, jint);

                    #ifdef __cplusplus
                    }
                    #endif
                    #endif

