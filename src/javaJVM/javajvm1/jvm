走进JVM
JVM相对于Java应用层的学习难度更大 开篇推荐掌握的预备知识: C/C++(关键) 微机原理与接口技术 计算机组成原理 操作系统 数据结构与算法 编译原理
(不推荐刚学完JavaSE的同学学习)如果没有掌握推荐的一半以上的预备知识 可能学习起来会比较吃力

本实验中需要用到的开发工具: CLion IDEA JetbrainsGateway

此阶段 我们需要深入探讨Java的底层执行原理 了解Java程序运行的本质 开始之前 推荐各位都入手一本《深入理解Java虚拟机 第三版》这本书对于JVM的讲述非常地详细

我们在JavaSE阶段的开篇就进行介绍了 我们的Java程序之所以能够实现跨平台 本质就是因为它是运行在虚拟机之上的 而不同平台只需要安装对应平台的Java虚拟机即可运行(在JRE中包含)
所有的Java程序都采用统一的标准 在任何平台编译出来的字节码文件(.class)也是同样的 最后实际上是将编译后的字节码交给JVM处理执行

                                            java程序
                                               |
                                               |
                             javac           javac           javac
                               |               |               |
                               |               |               |
                              JVM             JVM             JVM
                               |               |               |
                               |               |               |
                            class文件        class文件       class文件
                               |               |               |
                               |               |               |
                             Linux          Windows          MacOS

也正是得益于这种统一规范 除了Java以外 还有多种JVM语言 比如Kotlin Groovy等 它们的语法虽然和Java不一样 但是最终编译得到的字节码文件 和Java是同样的规范 同样可以交给JVM处理

                            java      Groovy      Kotlin      Jython      Scala
                              |         |           |           |           |
                              |         |           |           |           |
                            编译器     编译器       编译器       编译器        编译器
                            ---------------------------------------------------
                                                    |
                                                    |
                                              .class字节码文件
                                                    ^
                                                    |
                                                    |
                                           java Virtual Machine
                                                    |
                                                    |
                                           Windows/Linux/MacOS

所以 JVM是我们需要去关注的一个部分 通过了解Java的底层运作机制 我们的技术会得到质的提升